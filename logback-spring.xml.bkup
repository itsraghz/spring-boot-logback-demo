<configuration>
    <!-- Insert the current time formatted as "yyyyMMdd'T'HHmmss" under
     the key "bySecond" into the logger context. This value will be
     available to all subsequent configuration elements. -->
    <timestamp key="bySecond" datePattern="yyyy_MMM_dd_HH_mm_ss"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>-->
            <!-- Ref : https://reflectoring.io/logging-format-logback/ -->
            <pattern>%d{yyyy-MM-dd} | %d{HH:mm:ss.SSS} | %thread | %5p | %logger{30} | %m%n</pattern>
        </encoder>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <!-- use the previously created timestamp to create a uniquely
             named log file -->
        <!--<file>./data/logs/WIP/2021/03/19/consoleOut__log-${bySecond}.log</file>--> <!-- Works fine! -->
        <file>${logfileNameWithPath}</file> <!-- DOESN'T WORK!-->
        <append>true</append>
        <!-- set immediateFlush to false for much higher logging throughput -->
        <immediateFlush>true</immediateFlush>
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%-4relative %d{yyyy-MM-dd} | %d{HH:mm:ss.SSS} | [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="debug">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>